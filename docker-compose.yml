version: '3.7'
services:

  minio1:
    image: minio/minio
    ports:
      - "9091:9000"
    restart: always
    volumes:
      - "./policy/:/policy/"
      - "./data/minio1/1/:/data/minio1"
      - "./data/minio1/2/:/data/minio2"
      - "./data/minio1/3/:/data/minio3"
      - "./data/minio1/4/:/data/minio4"
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_DISK_USAGE_CRAWL_DELAY: 30
    command: server /data/minio{1...4}/

  minio2:
    image: minio/minio
    ports:
      - "9092:9000"
    restart: always
    volumes:
      - "./data/minio2/1/:/data/minio1"
      - "./data/minio2/2/:/data/minio2"
      - "./data/minio2/3/:/data/minio3"
      - "./data/minio2/4/:/data/minio4"
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_DISK_USAGE_CRAWL_DELAY: 30
    command: server /data/minio{1...4}/

  mc:
    image: minio/mc
    volumes:
      - "./policy/:/policy/"
    depends_on:
      - minio1
      - minio2
    entrypoint: >
      /bin/sh -c "
      echo 'Source: https://docs.min.io/minio/baremetal/replication/enable-server-side-two-way-bucket-replication.html';
      sleep 10s;

      echo 'Configure mc Access to the Remote Clusters';
      mc alias set $MINIO_ALIAS_1 http://$MINIO_HOST_1 $MINIO_ACCESS_KEY $MINIO_SECRET_KEY;
      mc alias set $MINIO_ALIAS_2 http://$MINIO_HOST_2 $MINIO_ACCESS_KEY $MINIO_SECRET_KEY;

      echo 'Create buckets and enable versioning';
      mc mb --ignore-existing $MINIO_ALIAS_1/$MINIO_BUCKET;
      mc version enable $MINIO_ALIAS_1/$MINIO_BUCKET;
      mc mb --ignore-existing $MINIO_ALIAS_2/$MINIO_BUCKET;
      mc version enable $MINIO_ALIAS_2/$MINIO_BUCKET;

      echo 'Configure User Accounts and Policies for Replication';
      mc admin policy add $MINIO_ALIAS_1 ReplicationRemoteUserPolicy /policy/ReplicationRemoteUserPolicy.json;
      mc admin user add $MINIO_ALIAS_1 $MINIO_REPLICATION_USER $MINIO_REPLICATION_PASSWORD;
      mc admin policy set $MINIO_ALIAS_1 ReplicationRemoteUserPolicy user=$MINIO_REPLICATION_USER;
      mc admin policy add $MINIO_ALIAS_2 ReplicationRemoteUserPolicy /policy/ReplicationRemoteUserPolicy.json;
      mc admin user add $MINIO_ALIAS_2 $MINIO_REPLICATION_USER $MINIO_REPLICATION_PASSWORD;
      mc admin policy set $MINIO_ALIAS_2 ReplicationRemoteUserPolicy user=$MINIO_REPLICATION_USER;

      echo 'Create a Replication Target for Each Cluster';
      mc admin bucket remote add $MINIO_ALIAS_1/$MINIO_BUCKET http://$MINIO_REPLICATION_USER:$MINIO_REPLICATION_PASSWORD@$MINIO_HOST_2/$MINIO_BUCKET --service "replication";
      mc admin bucket remote add $MINIO_ALIAS_2/$MINIO_BUCKET http://$MINIO_REPLICATION_USER:$MINIO_REPLICATION_PASSWORD@$MINIO_HOST_1/$MINIO_BUCKET --service "replication";

      echo 'Create a New Bucket Replication Rule';
      mc replicate add $MINIO_ALIAS_1/$MINIO_BUCKET --remote-bucket $MINIO_BUCKET --arn arn:minio:replication::$MINIO_UUID:$MINIO_BUCKET;
      mc replicate add $MINIO_ALIAS_2/$MINIO_BUCKET --remote-bucket $MINIO_BUCKET --arn arn:minio:replication::$MINIO_UUID:$MINIO_BUCKET;
      exit 0;
      "